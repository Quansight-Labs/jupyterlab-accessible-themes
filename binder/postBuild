#!/usr/bin/env python3
# Copyright (c) Jupyter Accessibility Team.
# Distributed under the terms of the Modified BSD License.

""" Perform a development install of jupyterlab_accessible_themes

    On Binder, this will run _after_ the environment has been fully created from
    the environment.yml in this directory.

    This script should also run locally on Linux/MacOS/Windows:

        python3 binder/postBuild
"""
import subprocess
import sys
from pathlib import Path

ROOT = Path.cwd()


def _(*args, **kwargs):
    """Run a command, echoing the args

    fails hard if something goes wrong
    """
    print("\n\t", " ".join(args), "\n")
    return_code = subprocess.call(args, **kwargs)
    if return_code != 0:
        print("\nERROR", return_code, " ".join(args))
        sys.exit(return_code)


# verify the environment is self-consistent before even starting
_(sys.executable, "-m", "pip", "check")

# force a clean installation to avoid caching between sessions
# NOTE: This step is necessary, if not it will fail to install again the extension.
_("rm", "-rf", "jupyterlab_accessible_themes/labextensions")
_("rm", "-rf", "jupyterlab_accessible_themes.egg-info")

# install the labextension
_(sys.executable, "-m", "jlpm", "install")
_(sys.executable, "-m", "jlpm", "build")
_(sys.executable, "-m", "pip", "install", "-e", ".")
_(sys.executable, "-m", "jupyter", "labextension", "develop", "--overwrite", ".")

# verify the environment the extension didn't break anything
_(sys.executable, "-m", "pip", "check")

# list the extensions
_("jupyter", "server", "extension", "list")

# initially list installed extensions to determine if there are any surprises
_("jupyter", "labextension", "list")


print("JupyterLab with jupyterlab_accessible_themes is ready to run with:\n")
print("\tjupyter lab\n")
